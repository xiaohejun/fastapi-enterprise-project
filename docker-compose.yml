services:
  postgres:
    image: postgres:14-alpine
    environment:
      TIMEZONE: ${TIMEZONE}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - ${POSTGRES_LOCAL_DATA}:/var/lib/postgresql/data
      # - ./alembic:/alembic
    ports:
      - "${POSTGRES_LOCAL_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - app-network


  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      API_PORT: ${API_PORT}
      # SECRET_KEY: your-secret-key
      # ALGORITHM: HS256
      # ACCESS_TOKEN_EXPIRE_MINUTES: 30
    volumes:
      - .:/code
    ports:
      - "${API_LOCL_PORT}:${API_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
